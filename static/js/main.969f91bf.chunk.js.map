{"version":3,"sources":["TimeCount.js","App.js","index.js"],"names":["TimeCount","_useState","useState","starttime","endtime","break","totalHours","answer","_useState2","_slicedToArray","time","setTime","_useState3","_useState4","error","setError","handleChange","e","_objectSpread","_defineProperty","target","name","value","getTimeFromMins","mins","h","m","totalHour","moment","utc","hours","minutes","format","Math","floor","afterBreak","afterBreakFunc","diff","concat","_jsx","Fragment","children","Box","className","sx","height","_jsxs","Card","Typography","variant","Alert","severity","onClose","width","TextField","size","type","id","onChange","Button","color","fullWidth","onClick","App","ReactDOM","render","React","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.969f91bf.chunk.js","sourcesContent":["import React, { Fragment, useState } from \"react\";\nimport { Alert, Box, Button, Card, TextField, Typography } from \"@mui/material\";\nimport moment from \"moment-timezone\";\n\nconst TimeCount = () => {\n  const [time, setTime] = useState({\n    starttime: \"\",\n    endtime: \"\",\n    break: \"\",\n    totalHours: \"\",\n    answer: false,\n  });\n  const [error, setError] = useState(false);\n\n  // handleChange function called when page input changes\n  const handleChange = (e) => {\n    setError(false);\n    setTime({ ...time, [e.target.name]: e.target.value });\n  };\n\n  // getTimeFromMins gives you exact time in hours from minutes\n  function getTimeFromMins(mins) {\n    let h = (mins / 60) | 0,\n      m = mins % 60 | 0;\n    let totalHour = moment.utc().hours(h).minutes(m).format(\"hh:mm\");\n    const hours = Math.floor(time.break / 60);\n    const minutes = time.break % 60;\n    const afterMinus = moment(totalHour, \"hh:mm\").diff(\n      moment(`${hours}:${minutes}`, \"hh:mm\"),\n      \"minutes\"\n    );\n    afterBreakFunc(afterMinus);\n  }\n\n  // afterBreakFunc gives you the total working hours from your totalTime after reducing the break time.\n  function afterBreakFunc(mins) {\n    let h = (mins / 60) | 0,\n      m = mins % 60 | 0;\n    let afterBreak = moment.utc().hours(h).minutes(m).format(\"hh:mm\");\n    setTime({ ...time, totalHours: afterBreak, answer: true });\n  }\n\n  // handleSubmit function calculate the time after user submitted all inputs.\n  const handleSubmit = () => {\n    if (!time.starttime || !time.endtime) {\n      setError(true);\n      setTime({ ...time, answer: false });\n    } else {\n      const totalWorkedTime = moment(time.endtime, \"hh:mm\").diff(\n        moment(time.starttime, \"hh:mm\"),\n        \"minutes\"\n      );\n      getTimeFromMins(totalWorkedTime);\n    }\n  };\n\n  return (\n    <Fragment>\n      <Box\n        className=\"d-flex justify-content-center align-items-center\"\n        sx={{ height: \"100vh\" }}\n      >\n        <Card className=\"p-5 bg-light\">\n          <Box className=\"bg-dark text-light p-4 text-center\">\n            <Typography variant=\"h4\">‚è± Time Tracker ‚è±</Typography>\n          </Box>\n\n          {error && (\n            <Alert\n              severity=\"error\"\n              className=\"mt-3\"\n              onClose={() => setError(false)}\n            >\n              Please Fill Start Time and End Time !!!\n            </Alert>\n          )}\n\n          <Box className=\"m-4 d-flex justify-content-around align-items-center\">\n            <Box width={125}>Start Time :</Box>\n            <TextField\n              size=\"small\"\n              type=\"time\"\n              name=\"starttime\"\n              className=\"form-control mx-2\"\n              id=\"starttime\"\n              value={time.starttime}\n              onChange={(e) => handleChange(e)}\n            />\n          </Box>\n\n          <Box className=\"m-4 d-flex justify-content-around align-items-center\">\n            <Box width={125}>Break :</Box>\n            <TextField\n              size=\"small\"\n              type=\"text\"\n              name=\"break\"\n              className=\"form-control mx-2\"\n              id=\"break\"\n              value={time.break}\n              onChange={(e) => handleChange(e)}\n            />\n          </Box>\n\n          <Box className=\"m-4 d-flex justify-content-around align-items-center\">\n            <Box width={125}>End Time :</Box>\n            <TextField\n              size=\"small\"\n              type=\"time\"\n              name=\"endtime\"\n              className=\"form-control mx-2\"\n              id=\"endtime\"\n              value={time.endtime}\n              onChange={(e) => handleChange(e)}\n            />\n          </Box>\n\n          <Button\n            variant=\"outlined\"\n            color=\"inherit\"\n            fullWidth\n            onClick={handleSubmit}\n          >\n            Submit\n          </Button>\n\n          {time.answer && (\n            <Box className=\"mt-4 p-4 text-center\">\n              <Typography variant=\"h6\">\n                üéâ üéâ Great ! You Worked&nbsp;\n                <span className=\"text-danger\">{time.totalHours}</span> hours üéâ\n                üéâ\n              </Typography>\n            </Box>\n          )}\n        </Card>\n      </Box>\n    </Fragment>\n  );\n};\n\nexport default TimeCount;\n","import TimeCount from \"./TimeCount\";\nfunction App() {\n  return (\n    <div>\n      <TimeCount />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}